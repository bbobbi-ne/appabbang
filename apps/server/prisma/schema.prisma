// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CommonCode {
  no          Int      @id @default(autoincrement())
  groupName   String   @map("group_name") @db.VarChar(20)
  code        String   @db.VarChar(5)
  name        String   @db.VarChar(30)
  remarkTxt   String?  @map("remark_txt") @db.VarChar(500)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("common_code")
}

model Users {
  no         Int      @id @default(autoincrement()) 
  id         String   @unique                   
  pw         String                           
  name       String                            
  userRole   String   @db.VarChar(5) @map("user_role") 
  createdAt  DateTime @default(now())
  updatedAt   DateTime @updatedAt @map("updated_at")           
  refreshToken String? @map("refresh_token") 

  @@map("users")
}

model Images {
  no              Int       @id @default(autoincrement())     // Images.no
  url             String                                      // 이미지 URL
  publicId        String    @map("public_id")                 // 퍼블릭 아이디 (Cloudinary 등)
  imageTargetType String?   @map("image_target_type")         // 이미지 타입 (enum으로 관리 가능)
  imageTargetNo   Int?      @map("image_target_no")           // 참조 대상 No
  order           Int?                                        // 이미지 정렬 순서
  name            String?                                     // 원본 파일명
  createdAt       DateTime  @default(now()) @map("created_at") // 등록 시간
  updatedAt       DateTime  @updatedAt @map("updated_at")     // 수정 시간

  @@map("images")
}

model Breads {
  no           Int      @id @default(autoincrement())
  name         String
  description  String?
  unitPrice   Int
  breadStatus String    @map("bread_status")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("breads")
}